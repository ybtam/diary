name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/docker-build.yml'
#  pull_request:
#    branches:
#      - main
#    paths:
#      - 'apps/**'
#      - 'packages/**'
#      - 'pnpm-lock.yaml'
#      - '.github/workflows/docker-build.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository }}

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.changes.outputs.api }}
      web: ${{ steps.changes.outputs.web }}
      db: ${{ steps.changes.outputs.db }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            api:
              - 'apps/api/**'
              - 'apps/db/**'
              - 'packages/**'
              - 'pnpm-lock.yaml'
            web:
              - 'apps/web/**'
              - 'packages/**'
              - 'pnpm-lock.yaml'
            db:
              - 'apps/db/**'
              - 'pnpm-lock.yaml'

  build-api:
    name: Build API Image
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.api == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-web:
    name: Build Web Image
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.web == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/web
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-db-migration:
    name: Build DB Migration Image
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.db == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/db-migration
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/db/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-gitops:
    name: Update GitOps Repository
    runs-on: ubuntu-latest
    needs: [build-api, build-web, build-db-migration]
    if: always() && github.ref == 'refs/heads/main' && (needs.build-api.result == 'success' || needs.build-web.result == 'success' || needs.build-db-migration.result == 'success')
    steps:
      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.GITOPS_REPOSITORY }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops
          
      - name: Update image tags
        run: |
          # Update API image tag
          if [ -f gitops/k8s/api-deployment.yaml ]; then
            sed -i "s|image: ${{ env.IMAGE_PREFIX }}/api:.*|image: ${{ env.IMAGE_PREFIX }}/api:${{ github.sha }}|g" gitops/k8s/api-deployment.yaml
          fi
          
          # Update Web image tag
          if [ -f gitops/k8s/web-deployment.yaml ]; then
            sed -i "s|image: ${{ env.IMAGE_PREFIX }}/web:.*|image: ${{ env.IMAGE_PREFIX }}/web:${{ github.sha }}|g" gitops/k8s/web-deployment.yaml
          fi
          
          # Update DB migration image tag
          if [ -f gitops/k8s/db-migration-job.yaml ]; then
            sed -i "s|image: ${{ env.IMAGE_PREFIX }}/db-migration:.*|image: ${{ env.IMAGE_PREFIX }}/db-migration:${{ github.sha }}|g" gitops/k8s/db-migration-job.yaml
          fi
          
          # Alternative: Update docker-compose.yml if using compose
          if [ -f gitops/docker-compose.yml ]; then
            sed -i "s|${{ env.IMAGE_PREFIX }}/api:.*|${{ env.IMAGE_PREFIX }}/api:${{ github.sha }}|g" gitops/docker-compose.yml
            sed -i "s|${{ env.IMAGE_PREFIX }}/web:.*|${{ env.IMAGE_PREFIX }}/web:${{ github.sha }}|g" gitops/docker-compose.yml
            sed -i "s|${{ env.IMAGE_PREFIX }}/db-migration:.*|${{ env.IMAGE_PREFIX }}/db-migration:${{ github.sha }}|g" gitops/docker-compose.yml
          fi
          
      - name: Commit and push changes
        run: |
          cd gitops
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update images to ${{ github.sha }}

            Updated by: ${{ github.actor }}
            Ref: ${{ github.ref }}
            API: ${{ env.IMAGE_PREFIX }}/api:${{ github.sha }}
            Web: ${{ env.IMAGE_PREFIX }}/web:${{ github.sha }}
            DB Migration: ${{ env.IMAGE_PREFIX }}/db-migration:${{ github.sha }}"
            git push
          fi
